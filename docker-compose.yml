services:
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"

  authentication-service:
    image: authentication-service
    container_name: authentication-service
    env_file:
      - .env
    ports:
      - "8080"
    depends_on:
      authentication-service-db:
        condition: service_healthy

  tickets-service:
    image: tickets-service
    container_name: tickets-service
    env_file:
      - .env
    ports:
      - "8080"
    depends_on:
      tickets-service-db:
        condition: service_healthy

  authentication-service-db:
    image: postgres
    container_name: authentication-service-db
    environment:
      POSTGRES_USER: ${AUTH_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_SERVICE_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${AUTH_SERVICE_DB_USER}" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  tickets-service-db:
    image: postgres
    container_name: tickets-service-db
    environment:
      POSTGRES_USER: ${TICKETS_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${TICKETS_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${TICKETS_SERVICE_DB_NAME}
    ports:
      - "15432:5432"
    volumes:
      - tickets_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${TICKETS_SERVICE_DB_USER}" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  auth_db_data:
  tickets_db_data: